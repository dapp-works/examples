{
	"id": "fc047991-ba62-4057-ac5f-9432cfd13c9c",
	"version": "0.1.0",
	"name": "spoon-mimo-example",
	"contractsTemplateManager": {
		"contracts": [
			{
				"id": "45225e24-780e-4fd4-900e-39eca3d7eb73",
				"name": "UniSwapRouter",
				"abi": [
					{
						"type": "constructor",
						"inputs": [
							{
								"name": "_factory",
								"type": "address",
								"internalType": "address"
							},
							{
								"name": "_WETH",
								"type": "address",
								"internalType": "address"
							}
						],
						"stateMutability": "nonpayable"
					},
					{
						"name": "WETH",
						"type": "function",
						"inputs": [],
						"outputs": [
							{
								"name": "",
								"type": "address",
								"internalType": "address"
							}
						],
						"stateMutability": "view"
					},
					{
						"name": "addLiquidity",
						"type": "function",
						"inputs": [
							{
								"name": "tokenA",
								"type": "address",
								"internalType": "address"
							},
							{
								"name": "tokenB",
								"type": "address",
								"internalType": "address"
							},
							{
								"name": "amountADesired",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "amountBDesired",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "amountAMin",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "amountBMin",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "to",
								"type": "address",
								"internalType": "address"
							},
							{
								"name": "deadline",
								"type": "uint256",
								"internalType": "uint256"
							}
						],
						"outputs": [
							{
								"name": "amountA",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "amountB",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "liquidity",
								"type": "uint256",
								"internalType": "uint256"
							}
						],
						"stateMutability": "nonpayable"
					},
					{
						"name": "addLiquidityETH",
						"type": "function",
						"inputs": [
							{
								"name": "token",
								"type": "address",
								"internalType": "address"
							},
							{
								"name": "amountTokenDesired",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "amountTokenMin",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "amountETHMin",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "to",
								"type": "address",
								"internalType": "address"
							},
							{
								"name": "deadline",
								"type": "uint256",
								"internalType": "uint256"
							}
						],
						"outputs": [
							{
								"name": "amountToken",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "amountETH",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "liquidity",
								"type": "uint256",
								"internalType": "uint256"
							}
						],
						"stateMutability": "payable"
					},
					{
						"name": "factory",
						"type": "function",
						"inputs": [],
						"outputs": [
							{
								"name": "",
								"type": "address",
								"internalType": "address"
							}
						],
						"stateMutability": "view"
					},
					{
						"name": "getAmountIn",
						"type": "function",
						"inputs": [
							{
								"name": "amountOut",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "reserveIn",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "reserveOut",
								"type": "uint256",
								"internalType": "uint256"
							}
						],
						"outputs": [
							{
								"name": "amountIn",
								"type": "uint256",
								"internalType": "uint256"
							}
						],
						"stateMutability": "pure"
					},
					{
						"name": "getAmountOut",
						"type": "function",
						"inputs": [
							{
								"name": "amountIn",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "reserveIn",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "reserveOut",
								"type": "uint256",
								"internalType": "uint256"
							}
						],
						"outputs": [
							{
								"name": "amountOut",
								"type": "uint256",
								"internalType": "uint256"
							}
						],
						"stateMutability": "pure"
					},
					{
						"name": "getAmountsIn",
						"type": "function",
						"inputs": [
							{
								"name": "amountOut",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "path",
								"type": "address[]",
								"internalType": "address[]"
							}
						],
						"outputs": [
							{
								"name": "amounts",
								"type": "uint256[]",
								"internalType": "uint256[]"
							}
						],
						"stateMutability": "view"
					},
					{
						"name": "getAmountsOut",
						"type": "function",
						"inputs": [
							{
								"name": "amountIn",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "path",
								"type": "address[]",
								"internalType": "address[]"
							}
						],
						"outputs": [
							{
								"name": "amounts",
								"type": "uint256[]",
								"internalType": "uint256[]"
							}
						],
						"stateMutability": "view"
					},
					{
						"name": "quote",
						"type": "function",
						"inputs": [
							{
								"name": "amountA",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "reserveA",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "reserveB",
								"type": "uint256",
								"internalType": "uint256"
							}
						],
						"outputs": [
							{
								"name": "amountB",
								"type": "uint256",
								"internalType": "uint256"
							}
						],
						"stateMutability": "pure"
					},
					{
						"name": "removeLiquidity",
						"type": "function",
						"inputs": [
							{
								"name": "tokenA",
								"type": "address",
								"internalType": "address"
							},
							{
								"name": "tokenB",
								"type": "address",
								"internalType": "address"
							},
							{
								"name": "liquidity",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "amountAMin",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "amountBMin",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "to",
								"type": "address",
								"internalType": "address"
							},
							{
								"name": "deadline",
								"type": "uint256",
								"internalType": "uint256"
							}
						],
						"outputs": [
							{
								"name": "amountA",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "amountB",
								"type": "uint256",
								"internalType": "uint256"
							}
						],
						"stateMutability": "nonpayable"
					},
					{
						"name": "removeLiquidityETH",
						"type": "function",
						"inputs": [
							{
								"name": "token",
								"type": "address",
								"internalType": "address"
							},
							{
								"name": "liquidity",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "amountTokenMin",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "amountETHMin",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "to",
								"type": "address",
								"internalType": "address"
							},
							{
								"name": "deadline",
								"type": "uint256",
								"internalType": "uint256"
							}
						],
						"outputs": [
							{
								"name": "amountToken",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "amountETH",
								"type": "uint256",
								"internalType": "uint256"
							}
						],
						"stateMutability": "nonpayable"
					},
					{
						"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
						"type": "function",
						"inputs": [
							{
								"name": "token",
								"type": "address",
								"internalType": "address"
							},
							{
								"name": "liquidity",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "amountTokenMin",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "amountETHMin",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "to",
								"type": "address",
								"internalType": "address"
							},
							{
								"name": "deadline",
								"type": "uint256",
								"internalType": "uint256"
							}
						],
						"outputs": [
							{
								"name": "amountETH",
								"type": "uint256",
								"internalType": "uint256"
							}
						],
						"stateMutability": "nonpayable"
					},
					{
						"name": "swapETHForExactTokens",
						"type": "function",
						"inputs": [
							{
								"name": "amountOut",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "path",
								"type": "address[]",
								"internalType": "address[]"
							},
							{
								"name": "to",
								"type": "address",
								"internalType": "address"
							},
							{
								"name": "deadline",
								"type": "uint256",
								"internalType": "uint256"
							}
						],
						"outputs": [
							{
								"name": "amounts",
								"type": "uint256[]",
								"internalType": "uint256[]"
							}
						],
						"stateMutability": "payable"
					},
					{
						"name": "swapExactETHForTokens",
						"type": "function",
						"inputs": [
							{
								"name": "amountOutMin",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "path",
								"type": "address[]",
								"internalType": "address[]"
							},
							{
								"name": "to",
								"type": "address",
								"internalType": "address"
							},
							{
								"name": "deadline",
								"type": "uint256",
								"internalType": "uint256"
							}
						],
						"outputs": [
							{
								"name": "amounts",
								"type": "uint256[]",
								"internalType": "uint256[]"
							}
						],
						"stateMutability": "payable"
					},
					{
						"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
						"type": "function",
						"inputs": [
							{
								"name": "amountOutMin",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "path",
								"type": "address[]",
								"internalType": "address[]"
							},
							{
								"name": "to",
								"type": "address",
								"internalType": "address"
							},
							{
								"name": "deadline",
								"type": "uint256",
								"internalType": "uint256"
							}
						],
						"outputs": [],
						"stateMutability": "payable"
					},
					{
						"name": "swapExactTokensForETH",
						"type": "function",
						"inputs": [
							{
								"name": "amountIn",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "amountOutMin",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "path",
								"type": "address[]",
								"internalType": "address[]"
							},
							{
								"name": "to",
								"type": "address",
								"internalType": "address"
							},
							{
								"name": "deadline",
								"type": "uint256",
								"internalType": "uint256"
							}
						],
						"outputs": [
							{
								"name": "amounts",
								"type": "uint256[]",
								"internalType": "uint256[]"
							}
						],
						"stateMutability": "nonpayable"
					},
					{
						"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
						"type": "function",
						"inputs": [
							{
								"name": "amountIn",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "amountOutMin",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "path",
								"type": "address[]",
								"internalType": "address[]"
							},
							{
								"name": "to",
								"type": "address",
								"internalType": "address"
							},
							{
								"name": "deadline",
								"type": "uint256",
								"internalType": "uint256"
							}
						],
						"outputs": [],
						"stateMutability": "nonpayable"
					},
					{
						"name": "swapExactTokensForTokens",
						"type": "function",
						"inputs": [
							{
								"name": "amountIn",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "amountOutMin",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "path",
								"type": "address[]",
								"internalType": "address[]"
							},
							{
								"name": "to",
								"type": "address",
								"internalType": "address"
							},
							{
								"name": "deadline",
								"type": "uint256",
								"internalType": "uint256"
							}
						],
						"outputs": [
							{
								"name": "amounts",
								"type": "uint256[]",
								"internalType": "uint256[]"
							}
						],
						"stateMutability": "nonpayable"
					},
					{
						"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
						"type": "function",
						"inputs": [
							{
								"name": "amountIn",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "amountOutMin",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "path",
								"type": "address[]",
								"internalType": "address[]"
							},
							{
								"name": "to",
								"type": "address",
								"internalType": "address"
							},
							{
								"name": "deadline",
								"type": "uint256",
								"internalType": "uint256"
							}
						],
						"outputs": [],
						"stateMutability": "nonpayable"
					},
					{
						"name": "swapTokensForExactETH",
						"type": "function",
						"inputs": [
							{
								"name": "amountOut",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "amountInMax",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "path",
								"type": "address[]",
								"internalType": "address[]"
							},
							{
								"name": "to",
								"type": "address",
								"internalType": "address"
							},
							{
								"name": "deadline",
								"type": "uint256",
								"internalType": "uint256"
							}
						],
						"outputs": [
							{
								"name": "amounts",
								"type": "uint256[]",
								"internalType": "uint256[]"
							}
						],
						"stateMutability": "nonpayable"
					},
					{
						"name": "swapTokensForExactTokens",
						"type": "function",
						"inputs": [
							{
								"name": "amountOut",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "amountInMax",
								"type": "uint256",
								"internalType": "uint256"
							},
							{
								"name": "path",
								"type": "address[]",
								"internalType": "address[]"
							},
							{
								"name": "to",
								"type": "address",
								"internalType": "address"
							},
							{
								"name": "deadline",
								"type": "uint256",
								"internalType": "uint256"
							}
						],
						"outputs": [
							{
								"name": "amounts",
								"type": "uint256[]",
								"internalType": "uint256[]"
							}
						],
						"stateMutability": "nonpayable"
					},
					{
						"type": "receive",
						"stateMutability": "payable"
					}
				],
				"bytecode": "",
				"isOpen": true,
				"viewSize": "md"
			},
			{
				"id": "1fd6ac21-52ec-4deb-85ea-6ce687b8a84f",
				"name": "ERC20",
				"abi": [
					{
						"type": "constructor",
						"inputs": [
							{
								"name": "treasury",
								"type": "address",
								"internalType": "address"
							}
						],
						"stateMutability": "nonpayable"
					},
					{
						"name": "Approval",
						"type": "event",
						"inputs": [
							{
								"name": "owner",
								"type": "address",
								"indexed": true,
								"internalType": "address"
							},
							{
								"name": "spender",
								"type": "address",
								"indexed": true,
								"internalType": "address"
							},
							{
								"name": "value",
								"type": "uint256",
								"indexed": false,
								"internalType": "uint256"
							}
						],
						"anonymous": false
					},
					{
						"name": "Transfer",
						"type": "event",
						"inputs": [
							{
								"name": "from",
								"type": "address",
								"indexed": true,
								"internalType": "address"
							},
							{
								"name": "to",
								"type": "address",
								"indexed": true,
								"internalType": "address"
							},
							{
								"name": "value",
								"type": "uint256",
								"indexed": false,
								"internalType": "uint256"
							}
						],
						"anonymous": false
					},
					{
						"name": "allowance",
						"type": "function",
						"inputs": [
							{
								"name": "owner",
								"type": "address",
								"internalType": "address"
							},
							{
								"name": "spender",
								"type": "address",
								"internalType": "address"
							}
						],
						"outputs": [
							{
								"name": "",
								"type": "uint256",
								"internalType": "uint256"
							}
						],
						"stateMutability": "view"
					},
					{
						"name": "approve",
						"type": "function",
						"inputs": [
							{
								"name": "spender",
								"type": "address",
								"internalType": "address"
							},
							{
								"name": "amount",
								"type": "uint256",
								"internalType": "uint256"
							}
						],
						"outputs": [
							{
								"name": "",
								"type": "bool",
								"internalType": "bool"
							}
						],
						"stateMutability": "nonpayable"
					},
					{
						"name": "balanceOf",
						"type": "function",
						"inputs": [
							{
								"name": "account",
								"type": "address",
								"internalType": "address"
							}
						],
						"outputs": [
							{
								"name": "",
								"type": "uint256",
								"internalType": "uint256"
							}
						],
						"stateMutability": "view"
					},
					{
						"name": "decimals",
						"type": "function",
						"inputs": [],
						"outputs": [
							{
								"name": "",
								"type": "uint8",
								"internalType": "uint8"
							}
						],
						"stateMutability": "view"
					},
					{
						"name": "decreaseAllowance",
						"type": "function",
						"inputs": [
							{
								"name": "spender",
								"type": "address",
								"internalType": "address"
							},
							{
								"name": "subtractedValue",
								"type": "uint256",
								"internalType": "uint256"
							}
						],
						"outputs": [
							{
								"name": "",
								"type": "bool",
								"internalType": "bool"
							}
						],
						"stateMutability": "nonpayable"
					},
					{
						"name": "increaseAllowance",
						"type": "function",
						"inputs": [
							{
								"name": "spender",
								"type": "address",
								"internalType": "address"
							},
							{
								"name": "addedValue",
								"type": "uint256",
								"internalType": "uint256"
							}
						],
						"outputs": [
							{
								"name": "",
								"type": "bool",
								"internalType": "bool"
							}
						],
						"stateMutability": "nonpayable"
					},
					{
						"name": "name",
						"type": "function",
						"inputs": [],
						"outputs": [
							{
								"name": "",
								"type": "string",
								"internalType": "string"
							}
						],
						"stateMutability": "view"
					},
					{
						"name": "symbol",
						"type": "function",
						"inputs": [],
						"outputs": [
							{
								"name": "",
								"type": "string",
								"internalType": "string"
							}
						],
						"stateMutability": "view"
					},
					{
						"name": "totalSupply",
						"type": "function",
						"inputs": [],
						"outputs": [
							{
								"name": "",
								"type": "uint256",
								"internalType": "uint256"
							}
						],
						"stateMutability": "view"
					},
					{
						"name": "transfer",
						"type": "function",
						"inputs": [
							{
								"name": "to",
								"type": "address",
								"internalType": "address"
							},
							{
								"name": "amount",
								"type": "uint256",
								"internalType": "uint256"
							}
						],
						"outputs": [
							{
								"name": "",
								"type": "bool",
								"internalType": "bool"
							}
						],
						"stateMutability": "nonpayable"
					},
					{
						"name": "transferFrom",
						"type": "function",
						"inputs": [
							{
								"name": "from",
								"type": "address",
								"internalType": "address"
							},
							{
								"name": "to",
								"type": "address",
								"internalType": "address"
							},
							{
								"name": "amount",
								"type": "uint256",
								"internalType": "uint256"
							}
						],
						"outputs": [
							{
								"name": "",
								"type": "bool",
								"internalType": "bool"
							}
						],
						"stateMutability": "nonpayable"
					}
				],
				"bytecode": "",
				"isOpen": true,
				"viewSize": "sm"
			}
		]
	},
	"routesTemplateManager": {
		"routes": []
	},
	"docsTemplateManager": {
		"docs": []
	},
	"scriptsTemplateManager": {
		"scripts": [
			{
				"id": "3b597523-3fb5-4587-935b-7ce911f868ad",
				"name": "Mimo.tsx",
				"code": "import { observer, useLocalObservable } from 'mobx-react-lite'\nimport { Box, Button, Input, Flex, Image, Text, Center, Link } from '@chakra-ui/react'\nimport { useEffect } from 'react'\nimport { BigNumberInputState, BigNumberState, BigNumber } from 'standard'\nimport sdk from 'spoon'\n\nconst chainId = 4689\n\nexport default function Demo({ children }) {\n  const store = useLocalObservable(() => ({\n    swapLoading: false,\n    slippage: 0.1,\n    fromToken: {\n      //WIOTX ADDRESS\n      address: \"0xa00744882684c3e4747faefd68d283ea44099d03\"\n    },\n    switchChain() {\n      sdk.helper.setChain(god, chainId)\n    },\n    fromAmount: new BigNumberInputState({}),\n    toToken: {\n      address: \"0xb8744ae4032be5e5ef9fab94ee9c3bf38d5d2ae0\",\n      balance: new BigNumberState({ decimals: 18 }),\n      decimals: 18,\n      name: \"VITA\",\n      logoURL: \"https://iotexproject.iotex.io/iotex-token-metadata/master/images/io1hp6y4eqr90j7tmul4w2wa8pm7wx462hq0mg4tw.png\"\n    },\n    toAmount: new BigNumberInputState({ decimals: 18 }),\n    connectWallet() {\n      sdk.god.setShowConnecter(true)\n    },\n    get deadline() {\n      return String(Math.floor(new Date().getTime() / 1000) + Number(20) * 60);\n    },\n    onChangeFromAmount(value) {\n      this.fromAmount.setFormat(value)\n      _.throttle(() => {\n        this.updatePrice();\n      }, 500)();\n    },\n    onChangeToAmount(value) {\n      this.toAmount.setFormat(value)\n      // this.toAmount.setDecimals(this.toToken.decimals);\n    },\n    //calc swap amount\n    async updatePrice() {\n      sdk.smartgraph.query(`query {\n          UniSwapRouter (calls: {chainId: 4689, address: \"0x147CdAe2BF7e809b9789aD0765899c06B361C5cE\"}) {\n              getAmountsOut (amountIn: \"${this.fromAmount.value.toFixed(0)}\", path:[\"${store.fromToken.address}\",\"${store.toToken.address}\"])\n          }\n      }`).then((res) => {\n        console.log(res.data.UniSwapRouter[0]);\n        this.toAmount.setValue(new BigNumber(res.data.UniSwapRouter[0].getAmountsOut.split(',')[1]));\n      });\n    },\n    onSwap() {\n      this.swapLoading = true\n      try {\n        sdk.smartgraph.mutation({\n          contractName: 'Swap',\n          method: 'swapExactETHForTokens',\n          params: [this.toToken.address, this.toAmount.value.times(1 - this.slippage).toFixed(0), god.currentNetwork.account, this.deadline],\n          address: '0xae50E962A4191569Ab0a9eeF1042B6449B2056e3',\n          value: this.fromAmount.value.toFixed(0),\n          chainId\n        }).then((res) => {\n          // console.log(res);\n          this.swapLoading = false\n          sdk.helper.toast('Swap Success')\n        });\n      } catch (err) {\n        this.swapLoading = false\n      }\n\n    },\n    init() {\n      try {\n        sdk.smartgraph.query(`query {\n          ERC20 (calls: {chainId: 4689, address: \"${store.toToken.address}\"}) {\n              balanceOf (account: \"${currentNetwork.account}\")\n          }\n      }`).then((res) => {\n          // console.log(res);\n          store.toToken.balance.setValue(new BigNumber(res.data.ERC20[0].balanceOf))\n          sdk.god.currentNetwork.loadBalance();\n        });\n      } catch (err) {\n      }\n    }\n  }))\n\n  useEffect(() => {\n    store.init()\n    sdk.smartgraph.event.on('provider.newBlock', (chainId) => {\n      // store.init()\n    });\n  }, [])\n\n  if (!currentNetwork.account) {\n    return <Button onClick={store.connectWallet}>Connect Wallet</Button>\n  }\n\n  const App = observer(() => (\n    <Box bg=\"white\" w=\"500px\" p=\"2rem\" rounded=\"xl\" boxShadow='0px 3px 20px #d6d6d680'>\n      <Link href=\"https://dev.mimo.exchange/swap\" isExternal fontSize=\"xs\" color=\"purple\">Detail : https://dev.mimo.exchange/swap</Link>\n      <Flex mt={4} direction=\"column\">\n        <Flex>\n          <Text ml=\"2\" fontSize=\"xs\">FROM:</Text>\n          <Image ml=\"2\" w='5' h='5' src=\"https://swap.mimo.exchange/images/coins/iotx.png\" />\n          <Text ml=\"1\" fontSize=\"xs\">IOTX</Text>\n          <Text fontSize=\"xs\" ml=\"auto\">{currentChain.Coin?.balance.format}</Text>\n        </Flex>\n        <Input value={store.fromAmount.format} mt={2} bg=\"white\" placeholder='0.0' onChange={(event) => {\n          store.onChangeFromAmount(event.currentTarget.value);\n        }} />\n      </Flex>\n\n      <Center mt={5}>\n        <Box rounded=\"full\" bg=\"#f3f0ff\" p={1}>\n          <svg fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" style={{ height: 24 }}><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 16V4m0 0L3 8m4-4l4 4m6 0v12m0 0l4-4m-4 4l-4-4\"></path></svg>\n        </Box>\n      </Center>\n\n      <Flex direction=\"column\" mt={3}>\n        <Flex>\n          <Text ml=\"2\" fontSize=\"xs\">TO:</Text>\n          <Image ml=\"2\" w='5' h='5' src={store.toToken.logoURL} />\n          <Text ml=\"1\" fontSize=\"xs\">{store.toToken.name}</Text>\n          <Text fontSize=\"xs\" ml=\"auto\">{store.toToken.balance.format}</Text>\n        </Flex>\n        <Input value={store.toAmount.format} mt={2} bg=\"white\" placeholder='0.0' onChange={(event) => {\n          store.onChangeToAmount(event.currentTarget.value);\n        }} />\n      </Flex>\n\n      <Center mt={5}>\n        <Button disabled={store.fromAmount.isZero} isLoading={store.swapLoading} w='full' colorScheme='purple' onClick={store.onSwap}>Swap</Button>\n      </Center>\n    </Box>))\n\n  return <App />\n}\n",
				"isOpen": true,
				"isRouter": false,
				"viewSize": "sm"
			}
		]
	},
	"chainData": {
		"1": {
			"contractInstanceManager": {
				"contracts": []
			}
		},
		"4": {
			"contractInstanceManager": {
				"contracts": []
			}
		},
		"4689": {
			"contractInstanceManager": {
				"contracts": [
					{
						"id": "845be092-b644-4f5c-beb8-e920376dcfd4",
						"templateId": "45225e24-780e-4fd4-900e-39eca3d7eb73",
						"address": "0x147CdAe2BF7e809b9789aD0765899c06B361C5cE",
						"name": "UniSwapRouter",
						"functionsCache": {
							"WETH": {
								"callResult": "0xA00744882684C3e4747faEFD68D283eA44099D03"
							},
							"factory": {
								"callResult": "0xda257cBe968202Dea212bBB65aB49f174Da58b9D"
							}
						},
						"tabIndex": 0,
						"execHistory": [],
						"show": true
					}
				]
			}
		},
		"4690": {
			"contractInstanceManager": {
				"contracts": []
			}
		}
	},
	"createdAt": 1662519496112,
	"homepageUrl": "",
	"logoUrl": "",
	"description": {
		
	}
}