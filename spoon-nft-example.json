{
	"id": "d8890e5e-4cce-4aab-b315-28e1d96c8915",
	"version": "0.1.0",
	"name": "spoon-nft-example",
	"contractsTemplateManager": {
		"contracts": [
			{
				"id": "80a049ce-1756-4fbb-9757-aea87de16759",
				"name": "SpoonNFT",
				"abi": [
					{
						"inputs": [],
						"stateMutability": "nonpayable",
						"type": "constructor"
					},
					{
						"anonymous": false,
						"inputs": [
							{
								"indexed": true,
								"internalType": "address",
								"name": "_owner",
								"type": "address"
							},
							{
								"indexed": true,
								"internalType": "address",
								"name": "_approved",
								"type": "address"
							},
							{
								"indexed": true,
								"internalType": "uint256",
								"name": "_tokenId",
								"type": "uint256"
							}
						],
						"name": "Approval",
						"type": "event"
					},
					{
						"anonymous": false,
						"inputs": [
							{
								"indexed": true,
								"internalType": "address",
								"name": "_owner",
								"type": "address"
							},
							{
								"indexed": true,
								"internalType": "address",
								"name": "_operator",
								"type": "address"
							},
							{
								"indexed": false,
								"internalType": "bool",
								"name": "_approved",
								"type": "bool"
							}
						],
						"name": "ApprovalForAll",
						"type": "event"
					},
					{
						"anonymous": false,
						"inputs": [
							{
								"indexed": true,
								"internalType": "address",
								"name": "_from",
								"type": "address"
							},
							{
								"indexed": true,
								"internalType": "address",
								"name": "_to",
								"type": "address"
							},
							{
								"indexed": true,
								"internalType": "uint256",
								"name": "_tokenId",
								"type": "uint256"
							}
						],
						"name": "Transfer",
						"type": "event"
					},
					{
						"inputs": [
							{
								"internalType": "address",
								"name": "_approved",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "_tokenId",
								"type": "uint256"
							}
						],
						"name": "approve",
						"outputs": [],
						"stateMutability": "nonpayable",
						"type": "function"
					},
					{
						"inputs": [
							{
								"internalType": "address",
								"name": "_owner",
								"type": "address"
							}
						],
						"name": "balanceOf",
						"outputs": [
							{
								"internalType": "uint256",
								"name": "",
								"type": "uint256"
							}
						],
						"stateMutability": "view",
						"type": "function"
					},
					{
						"inputs": [
							{
								"internalType": "uint256",
								"name": "_tokenId",
								"type": "uint256"
							}
						],
						"name": "getApproved",
						"outputs": [
							{
								"internalType": "address",
								"name": "",
								"type": "address"
							}
						],
						"stateMutability": "view",
						"type": "function"
					},
					{
						"inputs": [
							{
								"internalType": "address",
								"name": "_owner",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "_operator",
								"type": "address"
							}
						],
						"name": "isApprovedForAll",
						"outputs": [
							{
								"internalType": "bool",
								"name": "",
								"type": "bool"
							}
						],
						"stateMutability": "view",
						"type": "function"
					},
					{
						"inputs": [
							{
								"internalType": "address",
								"name": "_to",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "_uri",
								"type": "string"
							}
						],
						"name": "mint",
						"outputs": [],
						"stateMutability": "nonpayable",
						"type": "function"
					},
					{
						"inputs": [],
						"name": "name",
						"outputs": [
							{
								"internalType": "string",
								"name": "_name",
								"type": "string"
							}
						],
						"stateMutability": "view",
						"type": "function"
					},
					{
						"inputs": [
							{
								"internalType": "uint256",
								"name": "_tokenId",
								"type": "uint256"
							}
						],
						"name": "ownerOf",
						"outputs": [
							{
								"internalType": "address",
								"name": "_owner",
								"type": "address"
							}
						],
						"stateMutability": "view",
						"type": "function"
					},
					{
						"inputs": [
							{
								"internalType": "address",
								"name": "_from",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "_to",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "_tokenId",
								"type": "uint256"
							}
						],
						"name": "safeTransferFrom",
						"outputs": [],
						"stateMutability": "nonpayable",
						"type": "function"
					},
					{
						"inputs": [
							{
								"internalType": "address",
								"name": "_from",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "_to",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "_tokenId",
								"type": "uint256"
							},
							{
								"internalType": "bytes",
								"name": "_data",
								"type": "bytes"
							}
						],
						"name": "safeTransferFrom",
						"outputs": [],
						"stateMutability": "nonpayable",
						"type": "function"
					},
					{
						"inputs": [
							{
								"internalType": "address",
								"name": "_operator",
								"type": "address"
							},
							{
								"internalType": "bool",
								"name": "_approved",
								"type": "bool"
							}
						],
						"name": "setApprovalForAll",
						"outputs": [],
						"stateMutability": "nonpayable",
						"type": "function"
					},
					{
						"inputs": [
							{
								"internalType": "bytes4",
								"name": "_interfaceID",
								"type": "bytes4"
							}
						],
						"name": "supportsInterface",
						"outputs": [
							{
								"internalType": "bool",
								"name": "",
								"type": "bool"
							}
						],
						"stateMutability": "view",
						"type": "function"
					},
					{
						"inputs": [],
						"name": "symbol",
						"outputs": [
							{
								"internalType": "string",
								"name": "_symbol",
								"type": "string"
							}
						],
						"stateMutability": "view",
						"type": "function"
					},
					{
						"inputs": [
							{
								"internalType": "uint256",
								"name": "_index",
								"type": "uint256"
							}
						],
						"name": "tokenByIndex",
						"outputs": [
							{
								"internalType": "uint256",
								"name": "",
								"type": "uint256"
							}
						],
						"stateMutability": "view",
						"type": "function"
					},
					{
						"inputs": [
							{
								"internalType": "address",
								"name": "_owner",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "_index",
								"type": "uint256"
							}
						],
						"name": "tokenOfOwnerByIndex",
						"outputs": [
							{
								"internalType": "uint256",
								"name": "",
								"type": "uint256"
							}
						],
						"stateMutability": "view",
						"type": "function"
					},
					{
						"inputs": [
							{
								"internalType": "uint256",
								"name": "_tokenId",
								"type": "uint256"
							}
						],
						"name": "tokenURI",
						"outputs": [
							{
								"internalType": "string",
								"name": "",
								"type": "string"
							}
						],
						"stateMutability": "view",
						"type": "function"
					},
					{
						"inputs": [],
						"name": "totalSupply",
						"outputs": [
							{
								"internalType": "uint256",
								"name": "",
								"type": "uint256"
							}
						],
						"stateMutability": "view",
						"type": "function"
					},
					{
						"inputs": [
							{
								"internalType": "address",
								"name": "_from",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "_to",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "_tokenId",
								"type": "uint256"
							}
						],
						"name": "transferFrom",
						"outputs": [],
						"stateMutability": "nonpayable",
						"type": "function"
					}
				],
				"bytecode": "",
				"isOpen": true,
				"viewSize": "sm"
			}
		]
	},
	"routesTemplateManager": {
		"routes": []
	},
	"docsTemplateManager": {
		"docs": []
	},
	"scriptsTemplateManager": {
		"scripts": [
			{
				"id": "b84cd2da-2255-4a20-bfef-b125618e98b1",
				"name": "SpoonNFT.tsx",
				"code": "import { observer, useLocalObservable } from 'mobx-react-lite'\nimport {\n  Box, Button, Input, Flex, Image, Text, Center, Link, Popover, Portal,\n  FormControl,\n  FormLabel,\n  Code,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverHeader,\n  PopoverBody,\n  PopoverFooter,\n  PopoverArrow,\n  PopoverCloseButton,\n} from '@chakra-ui/react'\nimport { useEffect } from 'react'\nimport sdk from 'spoon'\n\nconst chainId = 4\n\nexport default function Demo({ children }) {\n  const store = useLocalObservable(() => ({\n    loading: false,\n    nftData: {},\n    mintData: {\n      tokenUri: \"https://iotex.io/blog/content/images/2022/03/meta-pebble.gif\",\n      to: sdk.god.currentNetwork.account\n    },\n    switchChain() {\n      sdk.helper.setChain(sdk.god, chainId)\n    },\n    connectWallet() {\n      sdk.god.setShowConnecter(true)\n    },\n    onMint() {\n      this.loading = true\n      try {\n        sdk.smartgraph.mutation({\n          contractName: 'SpoonNFT',\n          method: 'mint',\n          params: [this.mintData.to, this.mintData.tokenUri],\n          address: '0xC304582cFeBB9e38B56E8629DBD6c9D89712d843',\n          value: null\n        }).then((res) => {\n          this.loading = false\n          sdk.helper.toast('Swap Success')\n          this.init()\n        });\n      } catch (err) {\n        this.loading = false\n      }\n    },\n    onTransfer() {\n\n    },\n    init() {\n      try {\n        sdk.smartgraph.query(`query {\n          SpoonNFT (calls: {chainId: 4, address: \"0xC304582cFeBB9e38B56E8629DBD6c9D89712d843\"}) {\n              name\n              symbol\n              balanceOf (_owner: \"${sdk.god.currentNetwork.account}\")\n          }\n      }`).then((res) => {\n          store.nftData = res.data.SpoonNFT[0]\n          console.log(res);\n        });\n      } catch (err) {\n      }\n    }\n  }))\n\n\n  useEffect(() => {\n    store.init()\n    sdk.smartgraph.event.on('provider.newBlock', (chainId) => {\n      // store.init()\n    });\n  }, [])\n\n\n  useEffect(() => {\n    store.init()\n  }, [god.currentNetwork.account])\n\n  const App = observer(() => {\n    if (!currentNetwork.account) {\n      return <Button onClick={store.connectWallet}>Connect Wallet</Button>\n    }\n\n    if (god.currentChain.chainId != chainId) {\n      return <>\n        <Text color=\"purple\">{`Spoon's built-in SmartGraph supports custom networking, so you can copy the code below into the \"SETTING\"-> \"NETWORKS\" to play a demo of NTF`}</Text>\n        <Code rounded='xl' p='4' mt='4' colorScheme='yellow'>\n          {`{\n          \"name\": \"ETH Rinkeby\",\n          \"chainId\": 4,\n          \"rpcUrl\": \"https://rinkeby.infura.io/v3/95687aea7672415a92e7583cd63760e6\",\n          \"logoUrl\": \"/images/eth.svg\",\n          \"explorerUrl\": \"https://rinkeby.etherscan.io\",\n          \"explorerName\": \"EtherScan\",\n          \"nativeCoin\": \"ETH\",\n          \"blockPerSeconds\": 13,\n          \"multicallAddr\": \"0x5ba1e12693dc8f9c48aad8770482f4739beed696\",\n          \"type\": \"testnet\"\n        }`}</Code>\n        <Button mt={4} colorScheme='purple' onClick={store.switchChain}>Switch Chain (ETH Rinkeby)</Button>\n      </>\n    }\n    \n    return <Box bg=\"white\" w=\"500px\" p=\"2rem\" rounded=\"xl\" boxShadow='0px 3px 20px #d6d6d680'>\n      <Image mt={4} mb={4} rounded=\"xl\" src=\"https://iotex.io/blog/content/images/2022/03/meta-pebble.gif\" />\n      <Text mt={2} fontSize=\"xs\" color=\"purple\">Your Wallet : {god.currentNetwork.account} </Text>\n      <Text mt={2} fontSize=\"xs\" color=\"purple\">NFT Name : {store.nftData?.name} </Text>\n      <Text mt={2} fontSize=\"xs\" color=\"purple\">NFT Balance : {store.nftData?.balanceOf || '-'} </Text>\n\n      <Popover>\n        <PopoverTrigger>\n          <Button mt={3} w='full' colorScheme='purple' >Mint NFT</Button>\n        </PopoverTrigger>\n        <Portal>\n          <PopoverContent>\n            <PopoverArrow />\n            <PopoverHeader fontWeight=\"bold\">Mint Popover</PopoverHeader>\n            <PopoverCloseButton />\n            <PopoverBody>\n              <FormControl>\n                <FormLabel color='purple'>Image URL</FormLabel>\n                <Input value={store.mintData.tokenUri} onChange={(e) => store.mintData.tokenUri = e.target.value} size=\"sm\" />\n              </FormControl>\n              <FormControl mt={3}>\n                <FormLabel color='purple'>To (address)</FormLabel>\n                <Input value={store.mintData.to} size=\"sm\" onChange={(e) => store.mintData.to = e.target.value} />\n              </FormControl>\n              <Center mt={3}>\n                <Button isLoading={store.loading} colorScheme='purple' onClick={store.onMint}>Confirm</Button>\n              </Center>\n            </PopoverBody>\n          </PopoverContent>\n        </Portal>\n      </Popover>\n    </Box>\n  })\n  return <App />\n}\n// <Center mt={3}>\n//   {\n//     store.nftData.balanceOf != 0 &&\n//     <Button w='full' colorScheme='purple' onClick={store.onTransfer}>Transfer NFT</Button>\n//   }\n// </Center>",
				"isOpen": true,
				"isRouter": true,
				"viewSize": "sm"
			}
		]
	},
	"chainData": {
		"4": {
			"contractInstanceManager": {
				"contracts": [
					{
						"id": "e7902203-8d27-4201-9d71-8b3f1346dd92",
						"templateId": "80a049ce-1756-4fbb-9757-aea87de16759",
						"address": "0xC304582cFeBB9e38B56E8629DBD6c9D89712d843",
						"name": "SpoonNFT",
						"functionsCache": {
							"name": {
								"callResult": "SPOON NFT"
							},
							"symbol": {
								"callResult": "SPOON"
							},
							"totalSupply": {
								"callResult": "4"
							}
						},
						"tabIndex": 0,
						"execHistory": [],
						"show": true
					}
				]
			}
		},
		"4689": {
			"contractInstanceManager": {
				"contracts": []
			}
		},
		"4690": {
			"contractInstanceManager": {
				"contracts": []
			}
		}
	},
	"createdAt": 1662519597073,
	"homepageUrl": "",
	"logoUrl": "",
	"description": {
		
	}
}